<Activity mc:Ignorable="sap sap2010 sads" x:Class="PackNet.ScandataService.WorkFlows.ScanData.ParseCartonFromScanData"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:pcidm="clr-namespace:PackNet.Common.Interfaces.DTO.Machines;assembly=PackNet.Common.Interfaces"
 xmlns:pcidp="clr-namespace:PackNet.Common.Interfaces.DTO.ProductionGroups;assembly=PackNet.Common.Interfaces"
 xmlns:pcids="clr-namespace:PackNet.Common.Interfaces.DTO.Scanning;assembly=PackNet.Common.Interfaces"
 xmlns:pcie="clr-namespace:PackNet.Common.Interfaces.Eventing;assembly=PackNet.Common.Interfaces"
 xmlns:pcie1="clr-namespace:PackNet.Common.Interfaces.Enums;assembly=PackNet.Common.Interfaces"
 xmlns:pcis="clr-namespace:PackNet.Common.Interfaces.Services;assembly=PackNet.Common.Interfaces"
 xmlns:pcw="clr-namespace:PackNet.Common.WorkflowActivities;assembly=PackNet.Common"
 xmlns:pcwn="clr-namespace:PackNet.Common.WorkflowActivities.Notification;assembly=PackNet.Common"
 xmlns:pcwp="clr-namespace:PackNet.Common.WorkflowActivities.Packages;assembly=PackNet.Common"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ServiceLocator" Type="InArgument(pcis:IServiceLocator)" />
    <x:Property Name="Publisher" Type="InArgument(pcie:IEventAggregatorPublisher)" />
    <x:Property Name="ProductionGroup" Type="InArgument(pcidp:ProductionGroup)" />
    <x:Property Name="ScanData" Type="InArgument(pcids:IScanTrigger)" />
    <x:Property Name="MachineGroup" Type="InArgument(pcidm:MachineGroup)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>PackNet.ScandataService.WorkFlows.ScanData.ParseCartonFromScanData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>PackNet.Common.Interfaces.Services</x:String>
      <x:String>PackNet.Common.Interfaces.Enums</x:String>
      <x:String>PackNet.Common.Interfaces.Eventing</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.ProductionGroups</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.Scanning</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.PackagingDesigns</x:String>
      <x:String>PackNet.Common.Interfaces.DTO</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.Machines</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Moq</AssemblyReference>
      <AssemblyReference>Specificity.MSTest</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Reactive.Core</AssemblyReference>
      <AssemblyReference>System.Reactive.Interfaces</AssemblyReference>
      <AssemblyReference>System.Reactive.Linq</AssemblyReference>
      <AssemblyReference>PackNet.Plugins.ArticleService</AssemblyReference>
      <AssemblyReference>PackNet.Common.Interfaces</AssemblyReference>
      <AssemblyReference>CommonTests</AssemblyReference>
      <AssemblyReference>PackNet.Common</AssemblyReference>
      <AssemblyReference>PackNet.Data</AssemblyReference>
      <AssemblyReference>PackNet.ScandataService</AssemblyReference>
      <AssemblyReference>ServicesTests</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>ScandataServiceTests</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Parses the scan data from a barcode scanner into acarton and forwards it to the Scan To Create Selection Algorithm&#xA;&#xA;BarcodeData should look like the following&#xA;&#xA;&quot;2010001:10:9:8:5&quot;&#xA;&#xA;Design Id: 2010001&#xA;Length: 10&#xA;Width: 9&#xA;Height: 8&#xA;Quantity: 5" DisplayName="Parse carton from scan data" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:String[]" Name="parts" />
      <Variable x:TypeArguments="x:Char" Default=":" Name="SplitCharacter" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="row">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)">new Dictionary&lt;string, string&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_15">
        <pcw:SplitString DisplayName="Split Barcode Data" sap2010:WorkflowViewState.IdRef="SplitString_2">
          <pcw:SplitString.CharacterToSplitWith>
            <InArgument x:TypeArguments="x:Char">
              <mca:CSharpValue x:TypeArguments="x:Char">SplitCharacter</mca:CSharpValue>
            </InArgument>
          </pcw:SplitString.CharacterToSplitWith>
          <pcw:SplitString.Result>
            <OutArgument x:TypeArguments="s:String[]">
              <mca:CSharpReference x:TypeArguments="s:String[]">parts</mca:CSharpReference>
            </OutArgument>
          </pcw:SplitString.Result>
          <pcw:SplitString.StringToSplit>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">ScanData.BarcodeData</mca:CSharpValue>
            </InArgument>
          </pcw:SplitString.StringToSplit>
        </pcw:SplitString>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID2" DisplayName="Is Valid Barcode Data" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
            <FlowDecision.Condition>
              <mca:CSharpValue x:TypeArguments="x:Boolean">parts.Length == 4 || parts.Length == 5</mca:CSharpValue>
            </FlowDecision.Condition>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                <Sequence DisplayName="Parse Inputs" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                        <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)">row</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)">new Dictionary&lt;string, string&gt;()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Parse DesignId" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("DesignId", parts[0])</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Parse Length" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Length", parts[1])</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Parse Width" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Width", parts[2])</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Parse Height" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Height", parts[3])</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Assign S.A. type (Order)" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Type", "Order")</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                  <If sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">MachineGroup != null &amp;&amp; MachineGroup.ProductionMode == MachineGroupProductionModes.ManualProductionMode</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Assign MachineGroup" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8">
                        <AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("MachineGroupName", MachineGroup.Alias)</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection.Item>
                        <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                          <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection>
                    </If.Then>
                    <If.Else>
                      <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Assign ProductionGroup" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9">
                        <AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                            <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("ProductionGroupName", ProductionGroup.Alias)</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection.Item>
                        <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                          <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                        </InArgument>
                      </AddToCollection>
                    </If.Else>
                  </If>
                </Sequence>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID4" DisplayName="If Barcode Data Has Quantity" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
                    <FlowDecision.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">parts.Length == 5</mca:CSharpValue>
                    </FlowDecision.Condition>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_36">
                        <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Parse Quantity" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                              <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Quantity", parts[4])</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_35">
                            <pcwp:HandleDimensionsScannedData DisplayName="Handle Scanned Data" sap2010:WorkflowViewState.IdRef="HandleDimensionsScannedData_1">
                              <pcwp:HandleDimensionsScannedData.Row>
                                <InArgument x:TypeArguments="scg:IDictionary(x:String, x:String)">
                                  <mca:CSharpValue x:TypeArguments="scg:IDictionary(x:String, x:String)">row</mca:CSharpValue>
                                </InArgument>
                              </pcwp:HandleDimensionsScannedData.Row>
                              <pcwp:HandleDimensionsScannedData.ServiceLocator>
                                <InArgument x:TypeArguments="pcis:IServiceLocator">
                                  <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                </InArgument>
                              </pcwp:HandleDimensionsScannedData.ServiceLocator>
                            </pcwp:HandleDimensionsScannedData>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_39">
                                <pcwn:SendOperatorPanelScanNotificationToMachineGroup TextArgument2="{x:Null}" TextArgument3="{x:Null}" TextArgument4="{x:Null}" TextArgument5="{x:Null}" TextArgument6="{x:Null}" TextArgument7="{x:Null}" TextArgument8="{x:Null}" TextArgument9="{x:Null}" sap2010:WorkflowViewState.IdRef="SendOperatorPanelScanNotificationToMachineGroup_1" SuccessfulScan="True" Text="Successfully scanned barcode '{0}'">
                                  <pcwn:SendOperatorPanelScanNotificationToMachineGroup.ScanTrigger>
                                    <InArgument x:TypeArguments="pcids:IScanTrigger">
                                      <mca:CSharpValue x:TypeArguments="pcids:IScanTrigger">ScanData</mca:CSharpValue>
                                    </InArgument>
                                  </pcwn:SendOperatorPanelScanNotificationToMachineGroup.ScanTrigger>
                                  <pcwn:SendOperatorPanelScanNotificationToMachineGroup.ServiceLocator>
                                    <InArgument x:TypeArguments="pcis:IServiceLocator">
                                      <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                    </InArgument>
                                  </pcwn:SendOperatorPanelScanNotificationToMachineGroup.ServiceLocator>
                                  <pcwn:SendOperatorPanelScanNotificationToMachineGroup.TextArgument1>
                                    <InArgument x:TypeArguments="x:Object">
                                      <mca:CSharpValue x:TypeArguments="x:Object">ScanData.BarcodeData</mca:CSharpValue>
                                    </InArgument>
                                  </pcwn:SendOperatorPanelScanNotificationToMachineGroup.TextArgument1>
                                </pcwn:SendOperatorPanelScanNotificationToMachineGroup>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_37">
                        <AddToCollection x:TypeArguments="scg:KeyValuePair(x:String, x:String)" DisplayName="Default Quantity 1" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7">
                          <AddToCollection.Item>
                            <InArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                              <mca:CSharpValue x:TypeArguments="scg:KeyValuePair(x:String, x:String)">new KeyValuePair&lt;string, string&gt;("Quantity", "1")</mca:CSharpValue>
                            </InArgument>
                          </AddToCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">
                            <mca:CSharpValue x:TypeArguments="scg:ICollection(scg:KeyValuePair(x:String, x:String))">row</mca:CSharpValue>
                          </InArgument>
                        </AddToCollection>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_38">
                <pcwn:SendUiNotificationToMachineGroupAndLog TextArgument3="{x:Null}" TextArgument4="{x:Null}" TextArgument5="{x:Null}" TextArgument6="{x:Null}" TextArgument7="{x:Null}" TextArgument8="{x:Null}" TextArgument9="{x:Null}" DisplayName="send message to user bad scan data" sap2010:WorkflowViewState.IdRef="SendUiNotificationToMachineGroupAndLog_1">
                  <pcwn:SendUiNotificationToMachineGroupAndLog.MachineGroupId>
                    <InArgument x:TypeArguments="s:Guid">
                      <mca:CSharpValue x:TypeArguments="s:Guid">MachineGroup.Id</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.MachineGroupId>
                  <pcwn:SendUiNotificationToMachineGroupAndLog.NotificationSeverity>
                    <InArgument x:TypeArguments="pcie1:NotificationSeverity">
                      <mca:CSharpValue x:TypeArguments="pcie1:NotificationSeverity">NotificationSeverity.Error</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.NotificationSeverity>
                  <pcwn:SendUiNotificationToMachineGroupAndLog.ServiceLocator>
                    <InArgument x:TypeArguments="pcis:IServiceLocator">
                      <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.ServiceLocator>
                  <pcwn:SendUiNotificationToMachineGroupAndLog.Text>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">"Invalid barcode format '{0}', acceptable formats are \"&lt;Design ID&gt;{1}&lt;Length&gt;{1}&lt;Width&gt;{1}&lt;Height&gt;\" or \"&lt;Design ID&gt;{1}&lt;Length&gt;{1}&lt;Width&gt;{1}&lt;Height&gt;{1}&lt;Quantity&gt;\""</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.Text>
                  <pcwn:SendUiNotificationToMachineGroupAndLog.TextArgument1>
                    <InArgument x:TypeArguments="x:Object">
                      <mca:CSharpValue x:TypeArguments="x:Object">ScanData.BarcodeData</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.TextArgument1>
                  <pcwn:SendUiNotificationToMachineGroupAndLog.TextArgument2>
                    <InArgument x:TypeArguments="x:Object">
                      <mca:CSharpValue x:TypeArguments="x:Object">SplitCharacter</mca:CSharpValue>
                    </InArgument>
                  </pcwn:SendUiNotificationToMachineGroupAndLog.TextArgument2>
                </pcwn:SendUiNotificationToMachineGroupAndLog>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_40">
                    <pcwn:SendOperatorPanelScanNotificationToMachineGroup TextArgument2="{x:Null}" TextArgument3="{x:Null}" TextArgument4="{x:Null}" TextArgument5="{x:Null}" TextArgument6="{x:Null}" TextArgument7="{x:Null}" TextArgument8="{x:Null}" TextArgument9="{x:Null}" sap2010:WorkflowViewState.IdRef="SendOperatorPanelScanNotificationToMachineGroup_2" SuccessfulScan="False" Text="Failed to parse barcode '{0}'">
                      <pcwn:SendOperatorPanelScanNotificationToMachineGroup.ScanTrigger>
                        <InArgument x:TypeArguments="pcids:IScanTrigger">
                          <mca:CSharpValue x:TypeArguments="pcids:IScanTrigger">ScanData</mca:CSharpValue>
                        </InArgument>
                      </pcwn:SendOperatorPanelScanNotificationToMachineGroup.ScanTrigger>
                      <pcwn:SendOperatorPanelScanNotificationToMachineGroup.ServiceLocator>
                        <InArgument x:TypeArguments="pcis:IServiceLocator">
                          <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                        </InArgument>
                      </pcwn:SendOperatorPanelScanNotificationToMachineGroup.ServiceLocator>
                      <pcwn:SendOperatorPanelScanNotificationToMachineGroup.TextArgument1>
                        <InArgument x:TypeArguments="x:Object">
                          <mca:CSharpValue x:TypeArguments="x:Object">ScanData.BarcodeData</mca:CSharpValue>
                        </InArgument>
                      </pcwn:SendOperatorPanelScanNotificationToMachineGroup.TextArgument1>
                    </pcwn:SendOperatorPanelScanNotificationToMachineGroup>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <sads:DebugSymbol.Symbol>d29ROlxTb3VyY2VcUGFja05ldF9QaG9lbml4XFNlcnZpY2VQbHVnaW5zXFNjYW5kYXRhU2VydmljZVxXb3JrRmxvd3NcU2NhbkRhdGFcUGFyc2VKb2JGcm9tU2NhbkRhdGFEaW1lbnNpb25zLnhhbWxARQPdAg8CAQFIMkg1AgELSwtLiQECAQJRCWEbAwHtAmUPZXQDAeQClwIRtgI/AwGtArkCFckCTAMBjwJpEccBHAIBbMsBF8sBZwIBY4ICGYsCKwIBUNsBHeYBQAIBPekBIfkBWAIBH88BGdgBKwIBDF4PXmEDAYADWQ9ZXAMB9wJUD1RZAwHuAp8CF58CgQEDAdsCmgIXmgJiAwHSAqkCF6kCsQIDAckCswIXswJjAwHAAqQCF6QCbwMBtwKuAheuAmkDAa4CuQKDA7kCogMDAawCvAIbvAJrAwGjAsECG8ECcwMBmgLGAhvGAm0DAZECuQL2ArkC/QIDAZACahN1HAMB/AF2E38lAwHpAYABE4kBJQMB1gGKAROTASUDAcMBlAETnQElAwGwAZ4BE6cBJQMBnQGoARPGARgCAW2JAh2JAosBAgFahQIfhQKwAQIBUd4BI94BfwIBR+MBI+MBewIBPukBjgPpAbIDAgE87AEn7AF3AgEz8QEn8QF/AgEq9gEn9gF5AgEh6QGCA+kBiAMCASDWAR3WAYsBAgEW0gEf0gG1AQIBDXIZcpcBAwGGAm0ZbXwDAf0BfRd9hQEDAfMBeRl5rwEDAeoBhwEXhwGFAQMB4AGDARmDAa0BAwHXAZEBF5EBhQEDAc0BjQEZjQGsAQMBxAGbARebAYUBAwG6AZcBGZcBrQEDAbEBpQEXpQGFAQMBpwGhARmhAaoBAwGeAasBGasBxwECAW6vARe4ASkDAYoBuwEXxAEpAgF3tgEbtgGJAQMBlAGyAR2yAcUBAwGLAcIBG8IBiQEDAYEBvgEdvgHLAQIBeA==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="SplitString_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="486,746">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="HandleDimensionsScannedData_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOperatorPanelScanNotificationToMachineGroup_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">440,681</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_35">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">440,609</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">540,631 540,681</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_36">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,519</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,530 540,530 540,609</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="FlowStep_37">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">440,399</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">540,421 540,609</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_9" sap:VirtualizedContainerService.HintSize="156,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">130.8,366.4</av:Point>
            <av:Size x:Key="ShapeSize">156,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">130.8,409.9 100.8,409.9 100.8,530 120,530</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">286.8,409.9 316.8,409.9 316.8,410 440,410</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">110,244</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">210,296 210,326 209.8,326 209.8,366.4</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendUiNotificationToMachineGroupAndLog_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOperatorPanelScanNotificationToMachineGroup_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">930,259</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_38">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">680,259</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">880,270 930,270</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_10" sap:VirtualizedContainerService.HintSize="113,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">452.25,226.5</av:Point>
            <av:Size x:Key="ShapeSize">113,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">565.25,270 680,270</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">452.25,270 310,270</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">410,119</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">510,141 510,171 508.75,171 508.75,226.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1154,1911">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">480,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">510,77.5 510,119</av:PointCollection>
            <x:Double x:Key="Width">1140</x:Double>
            <x:Double x:Key="Height">1702.4</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PackNet.ScandataService.WorkFlows.ScanData.ParseCartonFromScanData_1" sap:VirtualizedContainerService.HintSize="1194,1991" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>