<Activity mc:Ignorable="sap sap2010 sads" x:Class="PackNet.Business.SelectionAlgorithms.Plugins.Order.OrderSelectionWorkflow"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:pcid="clr-namespace:PackNet.Common.Interfaces.Data;assembly=PackNet.Common.Interfaces"
 xmlns:pcidm="clr-namespace:PackNet.Common.Interfaces.DTO.Machines;assembly=PackNet.Common.Interfaces"
 xmlns:pcidp="clr-namespace:PackNet.Common.Interfaces.DTO.Packages;assembly=PackNet.Common.Interfaces"
 xmlns:pcidpp="clr-namespace:PackNet.Common.Interfaces.DTO.Packages.ProductionStates;assembly=PackNet.Common.Interfaces"
 xmlns:pcidpr="clr-namespace:PackNet.Common.Interfaces.DTO.Packages.Restrictions;assembly=PackNet.Common.Interfaces"
 xmlns:pcie="clr-namespace:PackNet.Common.Interfaces.Enums;assembly=PackNet.Common.Interfaces"
 xmlns:pcis="clr-namespace:PackNet.Common.Interfaces.Services;assembly=PackNet.Common.Interfaces"
 xmlns:pcwp="clr-namespace:PackNet.Common.WorkflowActivities.Packages;assembly=PackNet.Common"
 xmlns:pcwr="clr-namespace:PackNet.Common.WorkflowActivities.Restrictions;assembly=PackNet.Common"
 xmlns:rr="clr-namespace:RestrictionService.Restrictions;assembly=RestrictionService"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sle="clr-namespace:System.Linq.Expressions;assembly=System.Core"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="JobsRepository" Type="InArgument(pcid:IJobsRepository)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="RestrictionService" Type="InArgument(pcis:IRestrictionService)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="MachineGroup" Type="InArgument(pcidm:MachineGroup)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="ServiceLocator" Type="InArgument(pcis:IServiceLocator)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="PackagesToProduce" Type="OutArgument(scg:List(pcidp:Package))" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>PackNet.Business.SelectionAlgorithms.Plugins.Order.OrderSelectionWorkflow_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>PackNet.Common.Interfaces.Data</x:String>
      <x:String>PackNet.Common.Interfaces.Services</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.Machines</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.Packages</x:String>
      <x:String>PackNet.Common.Interfaces.Enums</x:String>
      <x:String>PackNet.Common.Interfaces.DTO.Packages.ProductionStates</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PackNet.Plugins.ArticleService</AssemblyReference>
      <AssemblyReference>CartonPropertyGroupService</AssemblyReference>
      <AssemblyReference>PackNet.Common.Interfaces</AssemblyReference>
      <AssemblyReference>PackNet.Common</AssemblyReference>
      <AssemblyReference>ExternalZebraPrintIntegration</AssemblyReference>
      <AssemblyReference>PackNet.IODeviceService</AssemblyReference>
      <AssemblyReference>PackNet.KvmService</AssemblyReference>
      <AssemblyReference>RestrictionService</AssemblyReference>
      <AssemblyReference>PackNet.ScandataService</AssemblyReference>
      <AssemblyReference>Microsoft.Consulting.Workflow.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Workflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(pcidp:Job)" Name="producibleJobs">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:List(pcidp:Job)">new List&lt;Job&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:IEnumerable(pcidp:Job)" Name="sortedJobs">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">new List&lt;Job&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="pcidp:Job" Name="jobToProduce" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_7">
        <pcwp:AppendJobsWithStatus sap2010:Annotation.AnnotationText="Returns the orders with at least one Package in staged state" DisplayName="Get Staged Orders" sap2010:WorkflowViewState.IdRef="AppendJobsWithStatus_1">
          <pcwp:AppendJobsWithStatus.Jobs>
            <InArgument x:TypeArguments="scg:List(pcidp:Job)">
              <mca:CSharpValue x:TypeArguments="scg:List(pcidp:Job)">producibleJobs</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.Jobs>
          <pcwp:AppendJobsWithStatus.JobsRepository>
            <InArgument x:TypeArguments="pcid:IJobsRepository">
              <mca:CSharpValue x:TypeArguments="pcid:IJobsRepository">JobsRepository</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.JobsRepository>
          <pcwp:AppendJobsWithStatus.MachineGroup>
            <InArgument x:TypeArguments="pcidm:MachineGroup">
              <mca:CSharpValue x:TypeArguments="pcidm:MachineGroup">MachineGroup</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.MachineGroup>
          <pcwp:AppendJobsWithStatus.ProductionStatus>
            <InArgument x:TypeArguments="pcidpp:ProductionStatuses">
              <mca:CSharpValue x:TypeArguments="pcidpp:ProductionStatuses">PreProductionStatuses.Staged</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.ProductionStatus>
          <pcwp:AppendJobsWithStatus.SelectionAlgorithmType>
            <InArgument x:TypeArguments="pcie:SelectionAlgorithmTypes">
              <mca:CSharpValue x:TypeArguments="pcie:SelectionAlgorithmTypes">SelectionAlgorithmTypes.Order</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.SelectionAlgorithmType>
          <pcwp:AppendJobsWithStatus.ServiceLocator>
            <InArgument x:TypeArguments="pcis:IServiceLocator">
              <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
            </InArgument>
          </pcwp:AppendJobsWithStatus.ServiceLocator>
        </pcwp:AppendJobsWithStatus>
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID3" DisplayName="Is MG in Auto?" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
            <FlowDecision.Condition>
              <mca:CSharpValue x:TypeArguments="x:Boolean">MachineGroup.ProductionMode == MachineGroupProductionModes.AutoProductionMode</mca:CSharpValue>
            </FlowDecision.Condition>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                <pcwp:GetJobsWithRestriction x:TypeArguments="pcidpr:ProductionGroupRestriction" DisplayName="Get Auto Jobs" sap2010:WorkflowViewState.IdRef="GetJobsWithRestriction`1_1">
                  <pcwp:GetJobsWithRestriction.Jobs>
                    <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">producibleJobs</mca:CSharpValue>
                    </InArgument>
                  </pcwp:GetJobsWithRestriction.Jobs>
                  <pcwp:GetJobsWithRestriction.Result>
                    <OutArgument x:TypeArguments="scg:List(pcidp:Job)">
                      <mca:CSharpReference x:TypeArguments="scg:List(pcidp:Job)">producibleJobs</mca:CSharpReference>
                    </OutArgument>
                  </pcwp:GetJobsWithRestriction.Result>
                </pcwp:GetJobsWithRestriction>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                    <pcwp:GetJobsNotAssignedToOtherMachineGroup sap2010:Annotation.AnnotationText="Filters out non distributed jobs assigned to other Machine Group" DisplayName="Removed assigned orders" sap2010:WorkflowViewState.IdRef="GetJobsNotAssignedToOtherMachineGroup_2">
                      <pcwp:GetJobsNotAssignedToOtherMachineGroup.Jobs>
                        <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">producibleJobs</mca:CSharpValue>
                        </InArgument>
                      </pcwp:GetJobsNotAssignedToOtherMachineGroup.Jobs>
                      <pcwp:GetJobsNotAssignedToOtherMachineGroup.MachineGroup>
                        <InArgument x:TypeArguments="pcidm:MachineGroup">
                          <mca:CSharpValue x:TypeArguments="pcidm:MachineGroup">MachineGroup</mca:CSharpValue>
                        </InArgument>
                      </pcwp:GetJobsNotAssignedToOtherMachineGroup.MachineGroup>
                      <pcwp:GetJobsNotAssignedToOtherMachineGroup.Result>
                        <OutArgument x:TypeArguments="scg:List(pcidp:Job)">
                          <mca:CSharpReference x:TypeArguments="scg:List(pcidp:Job)">producibleJobs</mca:CSharpReference>
                        </OutArgument>
                      </pcwp:GetJobsNotAssignedToOtherMachineGroup.Result>
                      <pcwp:GetJobsNotAssignedToOtherMachineGroup.ServiceLocator>
                        <InArgument x:TypeArguments="pcis:IServiceLocator">
                          <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                        </InArgument>
                      </pcwp:GetJobsNotAssignedToOtherMachineGroup.ServiceLocator>
                    </pcwp:GetJobsNotAssignedToOtherMachineGroup>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                        <pcwp:GetJobsWithPackageInProgressOnMachineGroup sap2010:Annotation.AnnotationText="Returns jobs that has packages in progress on machine group or jobs with packages not in progress on other machine groups." DisplayName="Get jobs with packages in progress" sap2010:WorkflowViewState.IdRef="GetJobsWithPackageInProgressOnMachineGroup_1">
                          <pcwp:GetJobsWithPackageInProgressOnMachineGroup.Jobs>
                            <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">producibleJobs</mca:CSharpValue>
                            </InArgument>
                          </pcwp:GetJobsWithPackageInProgressOnMachineGroup.Jobs>
                          <pcwp:GetJobsWithPackageInProgressOnMachineGroup.MachineGroup>
                            <InArgument x:TypeArguments="pcidm:MachineGroup">
                              <mca:CSharpValue x:TypeArguments="pcidm:MachineGroup">MachineGroup</mca:CSharpValue>
                            </InArgument>
                          </pcwp:GetJobsWithPackageInProgressOnMachineGroup.MachineGroup>
                          <pcwp:GetJobsWithPackageInProgressOnMachineGroup.Result>
                            <OutArgument x:TypeArguments="scg:List(pcidp:Job)">
                              <mca:CSharpReference x:TypeArguments="scg:List(pcidp:Job)">producibleJobs</mca:CSharpReference>
                            </OutArgument>
                          </pcwp:GetJobsWithPackageInProgressOnMachineGroup.Result>
                          <pcwp:GetJobsWithPackageInProgressOnMachineGroup.ServiceLocator>
                            <InArgument x:TypeArguments="pcis:IServiceLocator">
                              <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                            </InArgument>
                          </pcwp:GetJobsWithPackageInProgressOnMachineGroup.ServiceLocator>
                        </pcwp:GetJobsWithPackageInProgressOnMachineGroup>
                        <FlowStep.Next>
                          <FlowDecision x:Name="__ReferenceID1" DisplayName="Has any products?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                            <FlowDecision.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean">producibleJobs.Any()</mca:CSharpValue>
                            </FlowDecision.Condition>
                            <FlowDecision.True>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_19">
                                <pcwr:SortByPriorityRestriction x:TypeArguments="rr:OrderPriorityRestrictionHandler" sap2010:Annotation.AnnotationText="Sorts the orders by priority. Orders without priority restriction are sorted last." DisplayName="Sort Orders by Priority" sap2010:WorkflowViewState.IdRef="SortByPriorityRestriction`1_2">
                                  <pcwr:SortByPriorityRestriction.Jobs>
                                    <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">producibleJobs</mca:CSharpValue>
                                    </InArgument>
                                  </pcwr:SortByPriorityRestriction.Jobs>
                                  <pcwr:SortByPriorityRestriction.RestrictionService>
                                    <InArgument x:TypeArguments="pcis:IRestrictionService">
                                      <mca:CSharpValue x:TypeArguments="pcis:IRestrictionService">RestrictionService</mca:CSharpValue>
                                    </InArgument>
                                  </pcwr:SortByPriorityRestriction.RestrictionService>
                                  <pcwr:SortByPriorityRestriction.ServiceLocator>
                                    <InArgument x:TypeArguments="pcis:IServiceLocator">
                                      <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                    </InArgument>
                                  </pcwr:SortByPriorityRestriction.ServiceLocator>
                                  <pcwr:SortByPriorityRestriction.SortedJobs>
                                    <OutArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(pcidp:Job)">sortedJobs</mca:CSharpReference>
                                    </OutArgument>
                                  </pcwr:SortByPriorityRestriction.SortedJobs>
                                </pcwr:SortByPriorityRestriction>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                    <pcwr:SortJobsByProperty x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="Sort orders by created timestamp." DisplayName="Sort by Created" sap2010:WorkflowViewState.IdRef="SortJobsByProperty`1_2" OrderByDescending="False">
                                      <pcwr:SortJobsByProperty.Filter>
                                        <InArgument x:TypeArguments="sle:Expression(s:Func(pcidp:Job, s:DateTime))">
                                          <mca:CSharpValue x:TypeArguments="sle:Expression(s:Func(pcidp:Job, s:DateTime))">job =&gt; job.Created</mca:CSharpValue>
                                        </InArgument>
                                      </pcwr:SortJobsByProperty.Filter>
                                      <pcwr:SortJobsByProperty.Jobs>
                                        <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                                          <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">sortedJobs</mca:CSharpValue>
                                        </InArgument>
                                      </pcwr:SortJobsByProperty.Jobs>
                                      <pcwr:SortJobsByProperty.Result>
                                        <OutArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(pcidp:Job)">sortedJobs</mca:CSharpReference>
                                        </OutArgument>
                                      </pcwr:SortJobsByProperty.Result>
                                      <pcwr:SortJobsByProperty.ServiceLocator>
                                        <InArgument x:TypeArguments="pcis:IServiceLocator">
                                          <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                        </InArgument>
                                      </pcwr:SortJobsByProperty.ServiceLocator>
                                    </pcwr:SortJobsByProperty>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                        <pcwr:ResolveProductionRestrictions AllUsedMaterialsMustBeLoaded="True" sap2010:Annotation.AnnotationText="Return the job with the highest priority that is optimally producible on the machine group" DisplayName="Get Job with highest priority" sap2010:WorkflowViewState.IdRef="ResolveProductionRestrictions_2">
                                          <pcwr:ResolveProductionRestrictions.HighestPriorityProducibleJob>
                                            <OutArgument x:TypeArguments="pcidp:Job">
                                              <mca:CSharpReference x:TypeArguments="pcidp:Job">jobToProduce</mca:CSharpReference>
                                            </OutArgument>
                                          </pcwr:ResolveProductionRestrictions.HighestPriorityProducibleJob>
                                          <pcwr:ResolveProductionRestrictions.Jobs>
                                            <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                                              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">sortedJobs</mca:CSharpValue>
                                            </InArgument>
                                          </pcwr:ResolveProductionRestrictions.Jobs>
                                          <pcwr:ResolveProductionRestrictions.MachineGroup>
                                            <InArgument x:TypeArguments="pcidm:MachineGroup">
                                              <mca:CSharpValue x:TypeArguments="pcidm:MachineGroup">MachineGroup</mca:CSharpValue>
                                            </InArgument>
                                          </pcwr:ResolveProductionRestrictions.MachineGroup>
                                          <pcwr:ResolveProductionRestrictions.PackagesToProduce>
                                            <InArgument x:TypeArguments="scg:List(pcidp:Package)">
                                              <mca:CSharpValue x:TypeArguments="scg:List(pcidp:Package)">PackagesToProduce</mca:CSharpValue>
                                            </InArgument>
                                          </pcwr:ResolveProductionRestrictions.PackagesToProduce>
                                          <pcwr:ResolveProductionRestrictions.ServiceLocator>
                                            <InArgument x:TypeArguments="pcis:IServiceLocator">
                                              <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                            </InArgument>
                                          </pcwr:ResolveProductionRestrictions.ServiceLocator>
                                        </pcwr:ResolveProductionRestrictions>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                            <pcwr:AddPackageWithTilingPartnersToProductionList sap2010:Annotation.AnnotationText="Selects the package(s) to produce including tiling partners" DisplayName="Select Package to produce" sap2010:WorkflowViewState.IdRef="AddPackageWithTilingPartnersToProductionList_3">
                                              <pcwr:AddPackageWithTilingPartnersToProductionList.Job>
                                                <InArgument x:TypeArguments="pcidp:Job">
                                                  <mca:CSharpValue x:TypeArguments="pcidp:Job">jobToProduce</mca:CSharpValue>
                                                </InArgument>
                                              </pcwr:AddPackageWithTilingPartnersToProductionList.Job>
                                              <pcwr:AddPackageWithTilingPartnersToProductionList.MachineGroup>
                                                <InArgument x:TypeArguments="pcidm:MachineGroup">
                                                  <mca:CSharpValue x:TypeArguments="pcidm:MachineGroup">MachineGroup</mca:CSharpValue>
                                                </InArgument>
                                              </pcwr:AddPackageWithTilingPartnersToProductionList.MachineGroup>
                                              <pcwr:AddPackageWithTilingPartnersToProductionList.Result>
                                                <OutArgument x:TypeArguments="scg:List(pcidp:Package)">
                                                  <mca:CSharpReference x:TypeArguments="scg:List(pcidp:Package)">PackagesToProduce</mca:CSharpReference>
                                                </OutArgument>
                                              </pcwr:AddPackageWithTilingPartnersToProductionList.Result>
                                              <pcwr:AddPackageWithTilingPartnersToProductionList.ServiceLocator>
                                                <InArgument x:TypeArguments="pcis:IServiceLocator">
                                                  <mca:CSharpValue x:TypeArguments="pcis:IServiceLocator">ServiceLocator</mca:CSharpValue>
                                                </InArgument>
                                              </pcwr:AddPackageWithTilingPartnersToProductionList.ServiceLocator>
                                            </pcwr:AddPackageWithTilingPartnersToProductionList>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowDecision.True>
                          </FlowDecision>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                <pcwp:GetJobsWithRestriction x:TypeArguments="pcidpr:MachineGroupRestriction" DisplayName="Get Manual Jobs" sap2010:WorkflowViewState.IdRef="GetJobsWithRestriction`1_2">
                  <pcwp:GetJobsWithRestriction.Jobs>
                    <InArgument x:TypeArguments="scg:IEnumerable(pcidp:Job)">
                      <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pcidp:Job)">producibleJobs</mca:CSharpValue>
                    </InArgument>
                  </pcwp:GetJobsWithRestriction.Jobs>
                  <pcwp:GetJobsWithRestriction.Result>
                    <OutArgument x:TypeArguments="scg:List(pcidp:Job)">
                      <mca:CSharpReference x:TypeArguments="scg:List(pcidp:Job)">producibleJobs</mca:CSharpReference>
                    </OutArgument>
                  </pcwp:GetJobsWithRestriction.Result>
                </pcwp:GetJobsWithRestriction>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <sads:DebugSymbol.Symbol>d1lDOlxDb2RlXHBob2VuaXhcV29ya2Zsb3dzXFdvcmtmbG93c1xTZWxlY3Rpb25BbGdvcml0aG1zXE9yZGVyXE9yZGVyU2VsZWN0aW9uV29ya2Zsb3cueGFtbDNgA/ACDwIBAWQLZGkCAQtpC2lwAgECcAmPASUDAbUCkwEPkwGbAQMBrALPAhHaAi8DAZkCpQEVugFCAwH0Ab0BGdIBSwMBzwHWAR/WAXIDAcYB2gEh7wFCAwGhAfIBJYcCPwIBe4oCKaQCTgIBTKcCLbwCYQIBJ5cBEaIBLwIBFH0PfWMDAeMCeA94ZwMB2gJzD3NmAwHRAoIBD4IBegMByAKHAQ+HAX4DAb8CjAEPjAFnAwG2AtICF9ICdQMBowLXAhfXAnYDAZoCrQEbrQFvAwGQAqgBG6gBeQMBhwKyARuyAXoDAf4BtwEbtwFzAwH1AcUBH8UBcwMB6wHAAR/AAX0DAeIBygEfygF+AwHZAc8BH88BdwMB0AHsASfsAYkBAwG9Ad0BJ90BhQEDAbQB4gEn4gGHAQMBqwHnASfnAX8DAaIB8gGKAvIBkQIDAaAB+gEr+gGFAQMBlwH1ASv1AaMBAwGOAf8BK/8BjQEDAYUBhAIrhAKDAQIBfJcCL5cCgwECAXKNAi+NAoIBAgFpkgIvkgKJAQIBYIoCaooCcAIBX6ECL6EChwECAVacAi+cAo0BAgFNrwIzrwKHAQIBQ7QCM7QCmQECATq5AjO5AosBAgExqgIzqgJ+AgEomgEXmgF1AgEenwEXnwF2AgEV</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="AppendJobsWithStatus_1" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetJobsWithRestriction`1_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetJobsNotAssignedToOtherMachineGroup_2" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetJobsWithPackageInProgressOnMachineGroup_1" sap:VirtualizedContainerService.HintSize="200,113.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SortByPriorityRestriction`1_2" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SortJobsByProperty`1_2" sap:VirtualizedContainerService.HintSize="200,63.3333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ResolveProductionRestrictions_2" sap:VirtualizedContainerService.HintSize="200,96.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddPackageWithTilingPartnersToProductionList_3" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,999</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,880</av:Point>
            <av:Size x:Key="ShapeSize">200,96.6666666666667</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,976.666666666667 120,999</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,790</av:Point>
            <av:Size x:Key="ShapeSize">200,63.3333333333333</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,853.333333333333 120,880</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_19">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,679</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">120,759 120,790</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="102,86.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">249.5,596.5</av:Point>
            <av:Size x:Key="ShapeSize">102,86.6666666666667</av:Size>
            <av:PointCollection x:Key="TrueConnector">249.5,640 120,640 120,679</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,457.5</av:Point>
            <av:Size x:Key="ShapeSize">200,113.333333333333</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,570.833333333333 300,596.5 300.166666666667,596.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,354</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,434 300,457.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,269</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,291 100,321 300,321 300,354</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetJobsWithRestriction`1_2" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,269</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">480,291 480,321 300,321 300,354</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="82,86.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">259.5,196.5</av:Point>
            <av:Size x:Key="ShapeSize">82,86.6666666666667</av:Size>
            <av:PointCollection x:Key="TrueConnector">259.5,240 100,240 100,269</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">341.5,239.833333333333 480,239.833333333333 480,269</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,99</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,179 300,196.5 300.5,196.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="614,1114.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,99</av:PointCollection>
            <x:Double x:Key="Height">1079</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PackNet.Business.SelectionAlgorithms.Plugins.Order.OrderSelectionWorkflow_1" sap:VirtualizedContainerService.HintSize="654,1194.66666666667" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>